/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.9.0. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module Blink_topEntity_wishboneMasterC
    ( // Inputs
      input wire  c$ds5_bindCsr // clock
    , input wire  c$ds5_bindCsr_0 // reset
    , input wire [111:0] x

      // Outputs
    , output wire [115:0] result
    );
  reg [37:0] c$ds1_app_arg = {2'b00,1'b0,35'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
  wire [153:0] result_0;
  reg [1:0] c$app_arg;
  reg [1:0] c$case_alt;
  reg [37:0] nextState;
  wire [0:0] c$app_arg_0;
  reg [76:0] c$app_arg_1;
  wire [76:0] c$case_alt_0;
  wire [76:0] c$case_alt_1;
  wire  c;
  wire  c$app_arg_2;
  wire [31:0] c$app_arg_3;
  wire [31:0] a1;
  reg [35:0] c$app_arg_4;
  wire  eop;
  wire  eor;
  wire [32:0] dat1;
  reg  c$app_arg_5;
  wire [37:0] c$nextState_case_alt;
  wire [37:0] c$nextState_case_alt_0;
  wire [37:0] c$nextState_case_alt_1;
  wire [37:0] c$nextState_case_alt_2;
  wire  wbErr;
  wire [32:0] c$nextState_app_arg;
  wire [37:0] c$nextState_case_alt_3;
  wire [35:0] wbBwd;
  wire [153:0] c$case_alt_2;
  wire [153:0] result_1;
  wire [74:0] c$case_alt_selection_2;
  wire [74:0] c$case_alt_selection_5;
  wire [32:0] c$app_arg_selection_6;
  wire [32:0] c$app_arg_selection_11;
  wire [74:0] c$nextState_case_alt_selection_4;
  wire [74:0] c$nextState_case_alt_selection_7;
  wire [32:0] c$nextState_app_arg_selection_3;
  wire [74:0] result_selection_1;

  // register begin
  always @(posedge c$ds5_bindCsr or  negedge  c$ds5_bindCsr_0) begin : c$ds1_app_arg_register
    if ( ! c$ds5_bindCsr_0) begin
      c$ds1_app_arg <= {2'b00,1'b0,35'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
    end else begin
      c$ds1_app_arg <= result_1[153:116];
    end
  end
  // register end

  assign result = {result_1[115:115],
                   result_1[114:0]};

  assign result_0 = {nextState,   {c$app_arg_5,
                                   {c$app_arg_4,   c$app_arg_1,   c$app_arg}}};

  always @(*) begin
    case(c$ds1_app_arg[37:36])
      2'b01 : c$app_arg = c$case_alt;
      default : c$app_arg = {1'b0,1'bx};
    endcase
  end

  always @(*) begin
    case(nextState[37:36])
      2'b10 : c$case_alt = {1'b1,(c$app_arg_0)};
      default : c$case_alt = {1'b0,1'bx};
    endcase
  end

  always @(*) begin
    case(c$ds1_app_arg[37:36])
      2'b00 : nextState = c$nextState_case_alt_1;
      2'b01 : nextState = c$nextState_case_alt_0;
      default : nextState = c$nextState_case_alt;
    endcase
  end

  assign c$app_arg_0 = wbErr ? 1'b1 : 1'b0;

  always @(*) begin
    case(c$ds1_app_arg[37:36])
      2'b00 : c$app_arg_1 = c$case_alt_1;
      2'b01 : c$app_arg_1 = c$case_alt_0;
      default : c$app_arg_1 = {32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,
                               32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,
                               4'bxxxx,   1'b0,   c$ds1_app_arg[35:35],
                               1'b0,   1'b0,   3'b000,   2'd0};
    endcase
  end

  assign c$case_alt_selection_2 = x[111:37];

  assign c$case_alt_0 = c$case_alt_selection_2[74:74] ? {x[110:79],
                                                         c$app_arg_3,   x[45:42],   1'b0,   1'b1,
                                                         1'b1,   c$app_arg_2,   3'b000,
                                                         2'd0} : ({77 {1'bx}});

  assign c$case_alt_selection_5 = x[111:37];

  assign c$case_alt_1 = c$case_alt_selection_5[74:74] ? {x[110:79],
                                                         c$app_arg_3,   x[45:42],   1'b0,   1'b1,
                                                         1'b1,   c$app_arg_2,   3'b000,
                                                         2'd0} : {32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,
                                                                  32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,
                                                                  4'bxxxx,   1'b0,   c,   1'b0,   1'b0,
                                                                  3'b000,   2'd0};

  assign c = c$ds1_app_arg[35:35];

  assign c$app_arg_selection_6 = x[78:46];

  assign c$app_arg_2 = c$app_arg_selection_6[32:32] ? 1'b1 : 1'b0;

  assign c$app_arg_selection_11 = x[78:46];

  assign c$app_arg_3 = c$app_arg_selection_11[32:32] ? a1 : 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;

  assign a1 = x[77:46];

  always @(*) begin
    case(c$ds1_app_arg[37:36])
      2'b10 : c$app_arg_4 = {1'b1,{dat1,   eor,
                                   eop}};
      default : c$app_arg_4 = {1'b0,35'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};
    endcase
  end

  assign eop = c$ds1_app_arg[0:0];

  assign eor = c$ds1_app_arg[1:1];

  assign dat1 = c$ds1_app_arg[34:2];

  always @(*) begin
    case(c$ds1_app_arg[37:36])
      2'b10 : c$app_arg_5 = x[36:36];
      default : c$app_arg_5 = 1'b0;
    endcase
  end

  assign c$nextState_case_alt = x[36:36] ? {2'b00,c$ds1_app_arg[35:35],35'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} : c$ds1_app_arg;

  assign c$nextState_case_alt_selection_4 = x[111:37];

  assign c$nextState_case_alt_0 = c$nextState_case_alt_selection_4[74:74] ? c$nextState_case_alt_2 : ({38 {1'bx}});

  assign c$nextState_case_alt_selection_7 = x[111:37];

  assign c$nextState_case_alt_1 = c$nextState_case_alt_selection_7[74:74] ? c$nextState_case_alt_3 : c$ds1_app_arg;

  assign c$nextState_case_alt_2 = (wbBwd[3:3] | wbErr) ? {2'b10,~ x[41:41],c$nextState_app_arg,x[39:39],x[38:38]} : {2'b01,36'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};

  assign wbErr = wbBwd[2:2] | wbBwd[0:0];

  assign c$nextState_app_arg_selection_3 = x[78:46];

  assign c$nextState_app_arg = c$nextState_app_arg_selection_3[32:32] ? {1'b0,32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} : {1'b1,wbBwd[35:4]};

  assign c$nextState_case_alt_3 = x[37:37] ? {2'b00,1'b0,35'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} : {2'b01,36'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx};

  assign wbBwd = x[35:0];

  assign c$case_alt_2 = x[40:40] ? {c$ds1_app_arg,
                                    {1'b1,
                                     {{1'b0,35'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx},
                                      {32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,
                                       32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,
                                       4'bxxxx,   1'b0,   1'b0,   1'b0,   1'b0,
                                       3'b000,   2'd0},   {1'b0,1'bx}}}} : result_0;

  assign result_selection_1 = x[111:37];

  assign result_1 = result_selection_1[74:74] ? c$case_alt_2 : result_0;


endmodule

